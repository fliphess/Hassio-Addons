name: DSMR Reader

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'dsmrreader-1.10.1'
    tags:
      - '*.*.*'
    paths:
      - 'dsmr_reader/Dockerfile'
      - 'dsmr_reader/rootfs/**'
      - .github/workflows/dsmr-reader.yml

jobs:
  dsmr-reader:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # AMD64
          - BASE_IMAGE: xirixiz/dsmr-reader-docker:amd64-5.10.3-2023.02.01
            QEMU_ARCH: x86_64
            S6_ARCH: amd64
            DOCKER_TAG_SUFFIX: amd64

          # ARM32V6
          - BASE_IMAGE: xirixiz/dsmr-reader-docker:arm32v6-5.10.3-2023.02.01
            QEMU_ARCH: arm
            S6_ARCH: armhf
            DOCKER_TAG_SUFFIX: arm32v6

          # ARM32V7
          - BASE_IMAGE: xirixiz/dsmr-reader-docker:arm32v7-5.10.3-2023.02.01
            QEMU_ARCH: arm
            S6_ARCH: armhf
            DOCKER_TAG_SUFFIX: arm32v7

          # ARM64V8
          - BASE_IMAGE: xirixiz/dsmr-reader-docker:arm64v8-5.10.3-2023.02.01
            QEMU_ARCH: aarch64
            S6_ARCH: aarch64
            DOCKER_TAG_SUFFIX: arm64v8


    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Get the version from config.json
        id: data
        run: |
          version=$(jq --raw-output '.version' ./dsmr_reader/config.json)
          echo "::set-output name=HA_RELEASE::$version"
      - name: DSMR addon release
        run: echo ${{ steps.data.outputs.HA_RELEASE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            sanderdw/ha-dsmr-reader-${{ matrix.DOCKER_TAG_SUFFIX }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=${{ steps.data.outputs.HA_RELEASE }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./dsmr_reader
          platforms: ${{ steps.data.outputs.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{matrix.BASE_IMAGE}}
            HA_RELEASE=${{ steps.data.outputs.HA_RELEASE }}
            BUILD_ARCH=${{matrix.S6_ARCH}}